{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+","tags":true},"docs":[{"location":"","text":"<p>Welcome to Scala Academy project! \ud83e\udd19</p> <p>I'm Jacek Laskowski, an IT freelancer specializing in Apache Spark, Delta Lake and Apache Kafka (with brief forays into a wider data engineering space, e.g. Trino and ksqlDB, mostly during Warsaw Data Engineering meetups).</p> <p>I'm very excited to have you here and hope you will enjoy learning Scala and the ecosystem (e.g. Apache Spark, Apache Kafka) as much as I have.</p>  <p>Flannery O'Connor</p> <p>I write to discover what I know.</p>   \"The Internals Of\" series <p>I'm also writing other online books in the \"The Internals Of\" series. Please visit \"The Internals Of\" Online Books home page.</p>  <p>Expect text and code snippets from a variety of public sources. Attribution follows.</p> <p>Now, let's start the journey \ud83d\udd25</p>  <p>Last update: 2022-03-20</p>","title":"Scala Academy"},{"location":"scala/","text":"<p>Scala module is among the modules of the Scala Academy project. It is scheduled to take 1 month and teaches Scala 2.13.8.</p>","title":"Scala"},{"location":"scala/001/","text":"","title":"Day 1 / Mar 1 (Tue)"},{"location":"scala/001/#operating-system","text":"<p>The workshop is on Windows 11 with Windows Subsystem for Linux (WSL) / Ubuntu.</p>","title":"Operating System"},{"location":"scala/001/#development-tools","text":"<p>Installing the development tools:</p> <ol> <li>OpenJDK 11 (WSL/Ubuntu and Windows)</li> <li>IntelliJ IDEA (Windows) + the Scala plugin</li> <li>sbt</li> </ol>","title":"Development Tools"},{"location":"scala/001/#topics","text":"<ol> <li>Created a Scala project to display \"hello world\" in IntelliJ IDEA (a Scala/sbt project)<ul> <li><code>object</code></li> <li><code>extends App</code></li> <li><code>println</code></li> </ul> </li> <li>Using sbt<ul> <li><code>compile</code></li> <li><code>run</code></li> <li><code>~</code> + <code>~run</code></li> <li><code>console</code></li> <li><code>build.properties</code></li> </ul> </li> <li>Scala REPL using <code>sbt console</code><ul> <li><code>build.sbt</code> to set the Scala version</li> <li>REPL = read-eval-print loop</li> <li>Scala types (String, Integer, Long, Char, Boolean)</li> <li><code>res</code> values</li> <li><code>val</code> keyword</li> <li>TAB completion</li> </ul> </li> <li>Scala for the Impatient book<ul> <li>Parts of Chapter 1 \"The Basics\"</li> <li>Up to and including the Exercises on page 11</li> <li>Optional parentheses for methods with no parameters</li> <li>Optional semicolon</li> </ul> </li> </ol>","title":"Topics"},{"location":"scala/001/#working-hours","text":"<p>Day: Mar 1</p> <p>10:30am - 4pm in the office</p>","title":"Working Hours"},{"location":"scala/002/","text":"","title":"Day 2 / Mar 2 (Wed)"},{"location":"scala/002/#topics","text":"<p>Working with the Scala for the Impatient book</p>","title":"Topics"},{"location":"scala/002/#chapter-1","text":"<p>1.2 Declaring Values and Variables</p> <ul> <li><code>val</code>s</li> <li>Optional types</li> </ul> <p>1.3 Commonly Used Types</p> <ul> <li>All types are classes</li> <li>Invoking methods</li> <li>StringOps</li> </ul> <p>1.5 Calling Functions and Methods</p> <ul> <li>Function vs Method</li> </ul> <p>1.6 The apply Method</p> <ul> <li>With apply you don't need new</li> </ul> <p>1.7 Scaladoc</p> <ul> <li>https://docs.scala-lang.org/style/scaladoc.html</li> <li>https://www.scala-lang.org/api/2.13.8/</li> </ul>","title":"Chapter 1"},{"location":"scala/002/#chapter-2","text":"<p>Expressions</p> <p>2.1 Conditional Expressions</p> <ul> <li><code>if</code>s</li> </ul> <p>2.3 Block Expressions and Assignments</p> <p>2.4 Input and Output</p> <ul> <li><code>print</code></li> <li><code>println</code></li> <li><code>readLine(prompt)</code></li> <li><code>read</code> methods</li> </ul> <p>2.7 Functions</p> <p>2.8 Default and Named Arguments</p> <p>2.12 Exceptions</p> <ul> <li><code>try-finally</code> statement</li> </ul> <p>Exercises (page 26)</p> <ul> <li>1</li> <li>5</li> </ul>","title":"Chapter 2"},{"location":"scala/003/","text":"","title":"Day 3 / Mar 3 (Thu)"},{"location":"scala/003/#opening-questions","text":"<ol> <li>Are there any questions about the Scala topics covered?</li> <li>What do you think was the most important Scala feature covered yesterday?</li> </ol>","title":"Opening Questions"},{"location":"scala/003/#topics","text":"<p>Continuing development of <code>calculator</code> project as the foundation to teach the following:</p> <ol> <li>Refactoring in IntelliJ IDEA<ul> <li>Rename</li> <li>Extract Method</li> <li>Override</li> </ul> </li> <li><code>if</code> expression<ul> <li>Predicates as Scala methods</li> <li>Complex conditions using <code>&amp;&amp;</code> and <code>||</code></li> <li>Expressions vs statements</li> </ul> </li> </ol> <p>Others:</p> <p>Working with the Learning Scala book</p> <ol> <li><code>sbt console</code>, Scala REPL and <code>:paste</code></li> <li>Scala worksheet</li> <li><code>class User(name: String)</code></li> <li><code>def toString</code></li> </ol>","title":"Topics"},{"location":"scala/003/#working-hours","text":"<p>Day: Mar 3 (Thu)</p> <p>8:30am - 3pm in the office</p>","title":"Working Hours"},{"location":"scala/004/","text":"","title":"Day 4 / Mar 4 (Fri)"},{"location":"scala/004/#opening-questions","text":"<ol> <li>Are there any questions about the Scala topics covered?</li> <li>What was the most important Scala feature that we covered during the last session?</li> </ol>","title":"Opening Questions"},{"location":"scala/004/#exercise-user-class","text":"<p>Define <code>User</code> class with <code>greet</code> method that says \"Hello from $name\" when executed.</p>","title":"Exercise: User Class"},{"location":"scala/004/#scala-topics","text":"<ol> <li> <p><code>val</code> vs <code>def</code></p> <p>size(\"hello\")  // funkcja \"hello\".size   // metoda</p> </li> <li> <p><code>class User(name: String)</code> vs <code>class User(val name: String)</code> (note <code>name</code> parameter)</p> </li> </ol>","title":"Scala Topics"},{"location":"scala/004/#git","text":"<ul> <li>git installation on Windows 11</li> <li>git commmands</li> <li><code>init</code></li> <li><code>status</code></li> <li><code>add</code></li> <li><code>commit</code></li> <li><code>log</code></li> <li><code>diff</code> (<code>head..head~1</code>, using commit shas)</li> </ul>","title":"git"},{"location":"scala/004/#scala-topics_1","text":"<ul> <li>scala.Predef</li> <li>Scaladoc</li> <li><code>String</code> (it's <code>java.lang.String</code>)</li> <li>scala.collection.StringOps</li> <li>Higher-Order Functions (HOFs)</li> <li><code>filter</code></li> <li><code>sortBy</code></li> <li><code>foreach</code></li> <li> <p>Underscore to mark unused input arguments to a function</p> <p>val size: String =&gt; Int = _ =&gt; 5</p> </li> <li> <p><code>assert</code></p> <p>assert(size(\"hello\") == \"hello\".size)</p> <p>assert(\"hello\".sortBy(c =&gt; c.toInt) == \"ehllo\")   assert(\"hello\".sortBy(_.toInt) == \"ehllo\")</p> </li> <li> <p>procedure vs method vs function</p> </li> <li>methods = class members</li> <li>functions = standalone named executable block</li> <li>procedure = method that returns nothing (<code>Unit</code>)</li> </ul>","title":"Scala Topics"},{"location":"scala/004/#exercise-stringops-favorities","text":"<p>Pick two methods of scala.collection.StringOps and use Scala Worksheet with <code>sbt console</code> to learn how to use them:</p> <ol> <li><code>++</code>, <code>concat</code></li> <li><code>filter</code></li> <li><code>drop</code></li> <li><code>apply</code></li> <li><code>sortBy</code></li> <li><code>tail</code></li> <li><code>foreach</code></li> </ol>","title":"Exercise: StringOps Favorities"},{"location":"scala/004/#exercise-convert-function-to-method","text":"<p>Convert the <code>f</code> function to be a <code>def</code> to be used in <code>filter</code>.</p> <pre><code>val f: Char =&gt; Boolean = c =&gt; c != 'e' &amp;&amp; c != 'o'\n\ndef f_def... = ???\n\"hello\".filter(f_def) == \"hll\"\n</code></pre>","title":"Exercise: Convert function to method"},{"location":"scala/004/#exercise","text":"<p>Write <code>last</code> function that works like <code>StringOps.last</code> and uses the methods of <code>StringOps</code> we talked about today (except <code>last</code>).</p> <pre><code>val last: String =&gt; Char = ???\n</code></pre> <p>Hint: Use <code>size</code> and <code>apply</code></p>","title":"Exercise"},{"location":"scala/004/#learning-scala","text":"<p>Working with the Learning Scala book, Chapter 8 \"Classes\".</p>","title":"Learning Scala"},{"location":"scala/004/#homework","text":"<p>Write <code>nth</code> function that returns the character at <code>n</code>-th position.</p> <pre><code>nth(s: String, n: Int): Char\n</code></pre> <p>Assume <code>n</code> as <code>0 &lt;= n &lt; s.length</code>.</p>","title":"Homework"},{"location":"scala/004/#breaks","text":"<ol> <li>9:50 - 10:00</li> <li>11:00 - 11:10</li> <li>12:30 - 13:15 lunch break</li> </ol>","title":"Breaks"},{"location":"scala/004/#working-hours","text":"<p>Day: Mar 4 (Fri)</p> <p>8:30am - 3pm remotely</p>","title":"Working Hours"},{"location":"scala/005/","text":"","title":"Day 5 / Mar 7 (Mon)"},{"location":"scala/005/#opening-questions","text":"<ol> <li>Are there any questions about the Scala topics we covered so far?</li> <li>What was the most important Scala feature that we covered during the last session?</li> </ol>","title":"Opening Questions"},{"location":"scala/005/#review-homework","text":"<p>Write <code>nth</code> function that returns the character at <code>n</code>-th position.</p> <pre><code>nth(s: String, n: Int): Char\n</code></pre> <p>Assume <code>n</code> as <code>0 &lt;= n &lt; s.length</code>.</p>  <p>Review nth.sc for a solution.</p>","title":"Review Homework"},{"location":"scala/005/#option","text":"<ol> <li>Type Constructors<ul> <li>Known as \"Generic Type\" in Java</li> </ul> </li> <li>Scaladoc</li> </ol>","title":"Option"},{"location":"scala/005/#placeholder-syntax","text":"<p>Learning Scala book, page 72</p> <ol> <li>Function literals<ul> <li>Rocket operator <code>=&gt;</code></li> </ul> </li> <li>Demo: <code>doubler: Int =&gt; Int</code> function<ul> <li>Review doubler.sc</li> </ul> </li> <li>Demo: <code>safeStringOp(s: String, f: String =&gt; String): String</code> to return the result of executing <code>f</code> on the input <code>s</code> string when <code>s != null</code><ul> <li>Review safeStringOp.sc</li> </ul> </li> <li> <p>Exercise: Write a higher-order function (similar to the above) that accepts three input arguments (<code>x</code> and <code>y</code> ints and a <code>f</code> function that accepts two ints to produce an int) that executes <code>f</code> on the two ints. How to execute it?</p> <p>def combination(x: Int, y: Int, f: (Int, Int) =&gt; Int): Int</p> <ul> <li>Review combination.sc</li> </ul> </li> <li> <p>Very useful for Scala Collections library (coming up next)</p> </li> </ol>","title":"Placeholder Syntax"},{"location":"scala/005/#scala-collections-library","text":"<p>Learning Scala book, Chapter 6, page 83</p> <p>Package: scala.collections</p> <ul> <li>immutable</li> <li>mutable</li> </ul> <p>Data structures for collecting one or more values of a given type:</p> <ol> <li><code>Array</code></li> <li><code>List</code></li> <li><code>Map</code></li> <li><code>Set</code></li> <li>others</li> </ol> <p>Building blocks of modern software projects</p> <p>Iterable - the foundation for iteration and manipulation</p> <p>Demo: Creating instances of <code>List</code>, <code>Set</code> and <code>Map</code></p> <ul> <li>List</li> </ul> <p>Exercise: Review the scaladoc of <code>List</code>. Pick two higher-order methods (methods with a function argument). Write a sample code for each (to demo how they work).</p>","title":"Scala Collections Library"},{"location":"scala/005/#schedule","text":"<ol> <li>8:30 - 9:45</li> <li>10:00 - 11:00</li> <li>11:10 - 12:00</li> <li>12:00 - 12:45 lunch break</li> <li>12:45 - 1:30pm</li> <li>1:40pm - 2:45pm</li> </ol>","title":"Schedule"},{"location":"scala/005/#working-hours","text":"<p>Day: Mar 7 (Mon)</p> <ul> <li>8:30am - 3pm in the office</li> <li>2 hours for own work</li> </ul>","title":"Working Hours"},{"location":"scala/006/","text":"","title":"Day 6 / Mar 8 (Tue)"},{"location":"scala/006/#opening-questions","text":"<ol> <li>Are there any questions about the Scala topics we covered so far?</li> <li>What was the most important Scala feature that we covered during the last session?</li> </ol>","title":"Opening Questions"},{"location":"scala/006/#scala-collections-library","text":"<p>Learning Scala book, Chapter 6, page 83</p> <p>Package: scala.collections</p> <p>Exercise: Create a <code>List</code> of <code>List</code>s.</p> <p><code>Nil</code> and <code>::</code></p> <p>Exercise: Create a <code>List</code> of 5 numbers and find the ones that are less than 3.</p> <p>Exercise: Create a <code>List</code> of strings and apply <code>toUpperCase</code> on each</p> <ol> <li>Mapping List, p. 92</li> <li>Reducing Lists, p. 93-94</li> <li>List folding, p. 97</li> <li>Converting Collections, p. 98</li> </ol>","title":"Scala Collections Library"},{"location":"scala/006/#exercises","text":"<p>Learning Scala book, page 102:</p> <ol> <li>1, 2, 3, 4, 5, 6</li> </ol>","title":"Exercises"},{"location":"scala/006/#schedule","text":"<ol> <li>8:30 - 9:45</li> <li>10:00 - 11:00</li> <li>11:10 - 12:00</li> <li>12:00 - 12:45 lunch break</li> <li>12:45 - 1:30pm</li> <li>1:40pm - 2:30pm</li> </ol>","title":"Schedule"},{"location":"scala/006/#working-hours","text":"<ul> <li>8:30am - 2:30pm in the office</li> <li>2 hours for own work</li> </ul>","title":"Working Hours"},{"location":"scala/007/","text":"","title":"Day 7 / Mar 9 (Wed)"},{"location":"scala/007/#opening-questions","text":"<ol> <li>Are there any questions about the Scala topics we covered so far?</li> <li>What was the most important Scala feature that we covered during the last session?</li> </ol>","title":"Opening Questions"},{"location":"scala/007/#new-learning-approach-for-thu-and-fri","text":"<p>Taking on a new learning approach where 10 people are split into two teams (5 people each):</p> <ol> <li>Advanced</li> <li>Regulars</li> </ol> <p>The teams work remotely.</p> <p>The Advanced team is responsible for developing a game Tic-tac-toe in the coming two days (Thu and Fri). They work alone.</p> <p>Besides, one person from the Advanced team learns ScalaTest to be ready for a demo on Monday next week.</p> <p>The Regulars work on the S-99: Ninety-Nine Scala Problems to catch up to the Advanced team.</p> <p>The schedule for Thu and Fri (remote work):</p> <ol> <li>8:30am Check-in</li> <li>10:30am, 1pm and 2:30pm Regular checks</li> <li>12pm-12:45pm Lunch break</li> </ol>","title":"New Learning Approach for Thu and Fri"},{"location":"scala/007/#s-99-ninety-nine-scala-problems","text":"<p>Working on S-99: Ninety-Nine Scala Problems.</p>","title":"S-99: Ninety-Nine Scala Problems"},{"location":"scala/007/#schedule","text":"<ol> <li>8:30 - 9:45</li> <li>10:00 - 11:00</li> <li>11:10 - 12:00</li> <li>12:00 - 12:45 lunch break</li> <li>12:45 - 1:30pm</li> <li>1:40pm - 2:30pm</li> </ol>","title":"Schedule"},{"location":"scala/007/#working-hours","text":"<ul> <li>8:30am - 2:30pm in the office</li> <li>2 hours for own work</li> </ul>","title":"Working Hours"},{"location":"scala/008/","text":"","title":"Day 8 / Mar 10 (Thu)"},{"location":"scala/009/","text":"","title":"Day 9 / Mar 11 (Fri)"},{"location":"scala/009/#check-in-at-830am","text":"<ol> <li>The last day of the 2-day work-alone session<ul> <li>The Regulars work on S99 problems</li> <li>The Advanced finishes up the game. Once finished, work on S99 problems, review the past Scala topics (from the past days)</li> </ul> </li> <li>The Advanced team is supposed to deliver the application not later than at 2:30pm<ul> <li>GitHub recommended</li> </ul> </li> </ol>","title":"Check-In at 8:30am"},{"location":"scala/009/#schedule","text":"<ol> <li>8:30am Check-in</li> <li>10:30am, 1pm and 2:30pm Regular checks</li> <li>12pm-12:45pm Lunch break</li> </ol>","title":"Schedule"},{"location":"scala/009/#other-notes","text":"<ul> <li>The team reports luck of understanding of recursion and <code>foldLeft</code></li> <li>If you want to work on anything else in Scala (that feels or looks better), you're free to do so! Writing the tic-tac-toe application can be yours, too</li> <li>Helping others in Scala is learning the language better</li> </ul>","title":"Other Notes"},{"location":"scala/010/","text":"","title":"Day 10 / Mar 14 (Mon)"},{"location":"scala/010/#goals","text":"","title":"Goals"},{"location":"scala/010/#game-team","text":"<ol> <li>Develop a brand new game application: Tower of Hanoi</li> <li>Drawing every state change to the console (similarly to tic-tac-toe)</li> <li>Deadline: Friday 2:30pm on GitHub</li> <li>Every day push all your code to a GitHub repo</li> <li>Appoint one person as a liaison to talk to the mentor (for the whole week)</li> <li>Choose how, where and when to work (in the office or remotely, mornings or evenings, alone or together). Mind the single contact person.</li> <li>Name the team for proper communication<ul> <li>Send me the name by Tue EOD on slack</li> </ul> </li> </ol>","title":"Game Team"},{"location":"scala/010/#office-team","text":"<ol> <li>Name the team for proper communication<ul> <li>By Tue 8:30am</li> </ul> </li> <li>Starting afresh with Scala</li> <li>Focusing on individual teaching (allowing for different learning pace and more smooth and quiet learning experience)</li> </ol>","title":"Office Team"},{"location":"scala/010/#scala-topics","text":"<p>Using online resources to learn Scala. Encourage habit of reading free material to learn Scala better.</p>","title":"Scala Topics"},{"location":"scala/010/#creative-scala","text":"<p>Creative Scala - a book that is available at no cost (in electronic and online formats) and targeted at new developers who want to learn Scala and have fun. Exactly us!</p> <ol> <li>16.1 Literals and Expressions</li> <li>6.2 Method Syntax</li> <li>16.2 Value and Method Declarations</li> <li>7.2 Match Expressions</li> <li>9.1 Functions</li> <li>16.3 Functions as Values</li> <li>10.2 Working with Lists</li> <li>10.3 Transforming Sequences</li> </ol>","title":"Creative Scala"},{"location":"scala/010/#tour-of-scala","text":"<p>Tour of Scala</p>","title":"Tour of Scala"},{"location":"scala/010/#scala-book","text":"<p>Scala Book</p>","title":"Scala Book"},{"location":"scala/010/#exercises","text":"<ol> <li> <p>Learning Scala</p> <ol> <li>page 102: 1, 2, 3, 4, 5, 6</li> </ol> </li> <li> <p>Creative Scala</p> <ol> <li>Method Declaration Syntax</li> <li>12.3 Branching Structures</li> </ol> </li> </ol>","title":"Exercises"},{"location":"scala/011/","text":"","title":"Day 11 / Mar 15 (Tue)"},{"location":"scala/012/","text":"","title":"Day 12 / Mar 16 (Wed)"},{"location":"scala/013/","text":"","title":"Day 13 / Mar 17 (Thu)"},{"location":"scala/014/","text":"","title":"Day 14 / Mar 18 (Fri)"},{"location":"scala/015/","text":"","title":"Day 15 / Mar 21 (Mon)"},{"location":"scala/015/#misc","text":"<ol> <li>All 10 Scala devs working together in the office. Yay! \ud83d\udd25</li> <li>Honing Scala skills</li> <li>A Scala exam on April, 1st (Fri)</li> </ol>","title":"Misc"},{"location":"scala/015/#exercise-random-pairs","text":"<p>Write a function that generate distinct random pairs of 2 numbers from two <code>Int</code> sequences (of the same length)     1. scala.util.Random</p>","title":"Exercise: Random Pairs"},{"location":"scala/015/#exercise-pair-programming","text":"<ol> <li> <p>Use Pair programming technique to work together on a solution to the exercise.</p> <ol> <li>Use the above function to \"generate\" pairs of two Scala devs among the participants</li> </ol> </li> <li> <p>Develop a command-line application to uppercase every <code>n</code>th word in a file</p> <ol> <li>A file path and <code>n</code> are command-line arguments (parameters)</li> <li>A brand new Scala project in IntelliJ IDEA</li> <li><code>extends App</code></li> <li>Publish the project to GitHub</li> </ol> </li> </ol>","title":"Exercise: (Pair Programming)"},{"location":"scala/015/#scala-topics","text":"<p>From Scala for the Impatient book:</p> <ol> <li>2.8 Default and Named Arguments, p. 21</li> <li>2.9 Variable Arguments, p. 22</li> <li>4.7 Tuples, p. 45</li> <li>4.8 Zipping, p. 46</li> </ol>","title":"Scala Topics"},{"location":"scala/015/#more-exercises","text":"<p>From or based on Scala for the Impatient book:</p> <ol> <li> <p>Write a function that prints out a text in a box of <code>-</code>s (dashes) and <code>|</code> (pipes), e.g.</p> <pre><code>-------\n| Hello |\n-------\n</code></pre> </li> <li> <p><code>sum(numbers)</code> using <code>foldLeft</code></p> </li> <li>Ex 5 page 26</li> <li>Ex 2 page 38</li> <li>Ex 8 page 47</li> <li>Ex 9 page 47</li> </ol>","title":"More Exercises"},{"location":"scala/016/","text":"","title":"Day 16 / Mar 22 (Tue)"},{"location":"scala/016/#scalatest-tue","text":"<p>Introduction to ScalaTest</p>","title":"ScalaTest (Tue)"}]}